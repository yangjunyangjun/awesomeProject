// Code generated by protoc-gen-go. DO NOT EDIT.
// source: helloworld.proto

package TestHello

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Hrequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hrequest) Reset()         { *m = Hrequest{} }
func (m *Hrequest) String() string { return proto.CompactTextString(m) }
func (*Hrequest) ProtoMessage()    {}
func (*Hrequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17b8c58d586b62f2, []int{0}
}

func (m *Hrequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hrequest.Unmarshal(m, b)
}
func (m *Hrequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hrequest.Marshal(b, m, deterministic)
}
func (m *Hrequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hrequest.Merge(m, src)
}
func (m *Hrequest) XXX_Size() int {
	return xxx_messageInfo_Hrequest.Size(m)
}
func (m *Hrequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Hrequest.DiscardUnknown(m)
}

var xxx_messageInfo_Hrequest proto.InternalMessageInfo

func (m *Hrequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Hresponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hresponse) Reset()         { *m = Hresponse{} }
func (m *Hresponse) String() string { return proto.CompactTextString(m) }
func (*Hresponse) ProtoMessage()    {}
func (*Hresponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_17b8c58d586b62f2, []int{1}
}

func (m *Hresponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hresponse.Unmarshal(m, b)
}
func (m *Hresponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hresponse.Marshal(b, m, deterministic)
}
func (m *Hresponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hresponse.Merge(m, src)
}
func (m *Hresponse) XXX_Size() int {
	return xxx_messageInfo_Hresponse.Size(m)
}
func (m *Hresponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Hresponse.DiscardUnknown(m)
}

var xxx_messageInfo_Hresponse proto.InternalMessageInfo

func (m *Hresponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Hresponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Hrequest)(nil), "TestHello.Hrequest")
	proto.RegisterType((*Hresponse)(nil), "TestHello.Hresponse")
}

func init() {
	proto.RegisterFile("helloworld.proto", fileDescriptor_17b8c58d586b62f2)
}

var fileDescriptor_17b8c58d586b62f2 = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0x48, 0xcd, 0xc9,
	0xc9, 0x2f, 0xcf, 0x2f, 0xca, 0x49, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x0c, 0x49,
	0x2d, 0x2e, 0xf1, 0x00, 0x89, 0x2a, 0xc9, 0x71, 0x71, 0x78, 0x14, 0xa5, 0x16, 0x96, 0xa6, 0x16,
	0x97, 0x08, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06,
	0x81, 0xd9, 0x4a, 0x86, 0x5c, 0x9c, 0x1e, 0x45, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x20,
	0x05, 0xc9, 0xf9, 0x29, 0x10, 0x05, 0xac, 0x41, 0x60, 0xb6, 0x90, 0x00, 0x17, 0x73, 0x6e, 0x71,
	0xba, 0x04, 0x13, 0x58, 0x0f, 0x88, 0x69, 0xe4, 0xc2, 0xc5, 0x03, 0x36, 0x3b, 0x38, 0xb5, 0xa8,
	0x2c, 0x33, 0x39, 0x55, 0xc8, 0x84, 0x8b, 0x15, 0xcc, 0x17, 0x12, 0xd6, 0x83, 0xdb, 0xab, 0x07,
	0xb3, 0x54, 0x4a, 0x04, 0x55, 0x10, 0x62, 0x93, 0x12, 0x43, 0x12, 0x1b, 0xd8, 0xa9, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xcb, 0xc0, 0x30, 0xea, 0xbe, 0x00, 0x00, 0x00,
}
